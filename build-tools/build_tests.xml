<?xml version="1.0" encoding="UTF-8"?>

<project name="PPINetworksEvolutionPlugin" default="run-plugin-console" basedir="../">
    <description>Ant script</description>

    <property name="local-pass-folder" value="D:" />
    <property name="local-server-username-file" value="${local-pass-folder}/.user" />
    <property name="local-server-password-file" value="${local-pass-folder}/.pass" />
    <property name="clusters-comparator-name" value="ClustersComparator" />
    <property name="sets-comparator-name" value="SetsComparator" />
    <property name="server-name" value="students.mimuw.edu.pl" />

    <property name="server-folder" value="./studia/matlab" />
    <property name="server-folder-comp" value="./studia/aff-comp" />
    <property name="affinity-console-name" value="AffinityPropagationConsole" />
    <property name="clusters-comparator-name" value="ClustersComparator" />
    <property name="sets-comparator-name" value="SetsComparator" />

    <property file="${affinity-console-name}/nbproject/project.properties"/>
    <property file="${clusters-comparator-name}/nbproject/project.properties"/>
    <property file="${sets-comparator-name}/nbproject/project.properties"/>

    <target name="save-server-auth" unless="server-password">
        <input addproperty="server-username" message="Enter server username: " />
        <input addproperty="server-password" message="Enter server password: " />
        <echo file="${local-server-username-file}" message="${server-username}" />
        <echo file="${local-server-password-file}" message="${server-password}" />
    </target>

    <target name="delete-server-auth" unless="server-password" >
        <loadfile property="server-username" srcfile="${local-server-username-file}" failonerror="false"/>
        <loadfile property="server-password" srcfile="${local-server-password-file}" failonerror="false"/>
        <antcall target="save-server-auth" />
        <loadfile property="server-username" srcfile="${local-server-username-file}" failonerror="false"/>
        <loadfile property="server-password" srcfile="${local-server-password-file}" failonerror="false" />
    </target>

    <target name="get-server-auth" unless="server-password" >
        <loadfile property="server-username" srcfile="${local-server-username-file}" failonerror="false"/>
        <loadfile property="server-password" srcfile="${local-server-password-file}" failonerror="false"/>
        <antcall target="save-server-auth" />
        <loadfile property="server-username" srcfile="${local-server-username-file}" failonerror="false"/>
        <loadfile property="server-password" srcfile="${local-server-password-file}" failonerror="false" />
    </target>

    <target name="compile-affinity-console" description="Compile Cytoscape plugin">
        <ant antfile="${affinity-console-name}/build.xml" inheritall="false" target="jar" />
    </target>

    <target name="compile-clusters-comparator" description="Compile Cytoscape plugin">
        <ant antfile="${clusters-comparator-name}/build.xml" inheritall="false" target="jar" />
    </target>

    <target name="send-affinity-console" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="${affinity-console-name}/dist/${affinity-console-name}.jar"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>

    <target name="send-affinity-matlab" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/apcluster.m"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>

    <target name="send-affinity-sparse-matlab" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/apclusterSparse.m"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>

    <target name="send-affinity-tester" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/test"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>

    <target name="send-mcl-tester" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/MCLtest"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>

    <target name="send-my-tester" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/mytest"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>


    <target name="send-clusters-comparator" depends="get-server-auth" description="Copy to server">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="${clusters-comparator-name}/dist/${clusters-comparator-name}.jar"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>

    <target name="send-all" depends="send-clusters-comparator,send-affinity-tester,send-mcl-tester,send-my-tester,send-affinity-matlab,send-affinity-console" description="Send all...">
    </target>

    <target name="run-test" depends="get-server-auth" description="Run tests...">
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="${server-folder-comp}/run-test"
            verbose="true">
        </sshexec>
    </target>
    <target name="run-test-python" depends="get-server-auth" description="Run tests...">
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="python ${server-folder-comp}/run-test-python.py"
            verbose="true">
        </sshexec>
    </target>
    <target name="run-MCL-test" depends="get-server-auth" description="Run tests...">
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="${server-folder}/MCLtest"
            verbose="true">
        </sshexec>
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="cat ${server-folder}/MCLjacc"
            verbose="true">
        </sshexec>
    </target>

    <target name="run-my-test" depends="get-server-auth" description="Run tests...">
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="${server-folder}/mytest"
            verbose="true">
        </sshexec>
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="cat ${server-folder}/myjacc"
            verbose="true">
        </sshexec>
    </target>

    <target name="run-clique" depends="get-server-auth" description="Run tests...">
        <sshexec
            port="22"
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            command="${server-folder}/run-clique"
            verbose="true">
        </sshexec>
    </target>

    <target name="send-run-clique" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            file="build-tools/tests/run-clique"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>

    <target name="send-clique" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/clique.sim"
            todir="${server-username}:${server-password}@${server-name}:${server-folder}"
            />
    </target>

    <target name="send-toy-problem" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/ToyProblemSimilarities.sim"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>
        <target name="send-travel-problem" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            host="${server-name}"
            username="${server-username}"
            password="${server-password}"
            verbose="true"
            file="build-tools/tests/TravelRoutingSimilarities.sim"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>

    <target name="send-run-test" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            file="build-tools/tests/run-test"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>
        <target name="send-run-test-python" depends="get-server-auth" description="Run tests...">
        <scp
            trust="true"
            password="${server-password}"
            username="${server-username}"
            host="${server-name}"
            file="build-tools/tests/run-test-python.py"
            todir="${server-username}:${server-password}@${server-name}:${server-folder-comp}"
            />
    </target>
</project>